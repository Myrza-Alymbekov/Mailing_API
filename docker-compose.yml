version: '3.8'

services:
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
        - postgres_data:/var/lib/postgresql/data/
    environment:
        - POSTGRES_USER=my_proj
        - POSTGRES_PASSWORD=my_proj
        - POSTGRES_DB=my_proj_dev
  celery:
    build: ./app
    command: celery -A project worker -l info
    restart: always
    volumes:
        - ./app/:/usr/src/app/
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.10'
    #       memory: 64M
    env_file:
        - ./.env.dev
    depends_on:
        - db
  redis:
    image: redis:alpine
    restart: always
    command: redis-server --appendonly yes
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.10'
    #       memory: 64M
    volumes:
        - redis_data:/data
    ports:
        - "6379:6379"
  flower:
    image: mher/flower:0.9.7
    command: [ 'flower', '--broker=redis://redis:6379', '--port=5555' ]
    ports:
      - '5555:5555'
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  flower_data:
